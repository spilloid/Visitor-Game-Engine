@startuml FinalProject
class GameEngine {
    -list<Visitor> sceneVisitors
    -Scene scene
    +addVisitor(Visitor)
    +addSprite(SpriteProxy)
    +bool update()
}
class Scene{
    -list<SpriteProxy> spriteList
    +void addSprite()
    +void accept()
}
class TextureFactory{
        +bool loadTexture(string);
        +sf::Texture> getTexture(string);
}
class SpriteProxy{
    -int x
    -int y
    -int dy
    -int dx
    -int height
    -int WrapWidth
    -Sprite* sprite

    +getters()
    +setters()
}
class Visitor{
    +virtual void visit(SpriteProxy)
}
class BoundsVisitor{
    void visit()
}
class WrapBoundsVisitor{
    void visit()
    }
class BoundingBoxCollisionVisitor{
    void visit()
    }
class DrawingVisitor{
    void visit()
    }
class ForceVisitor{
    void visit()
    }
class GravityVisitor{
    void visit()
    }
class RayCastCollisionVisitor{
    void visit()
    }
GameEngine --> Visitor
GameEngine --> Scene
Scene --> SpriteProxy
Visitor -- SpriteProxy
Visitor <|-- ForceVisitor
Visitor <|-- GravityVisitor
Visitor <|-- BoundsVisitor
Visitor <|-- WrapBoundsVisitor
Visitor <|-- BoundingBoxCollisionVisitor
Visitor <|-- RayCastCollisionVisitor
Visitor <|-- DrawingVisitor
DrawingVisitor <--- TextureFactory
hello <--- GameEngine
hello <--- Visitor
hello <--- SpriteProxy
@enduml