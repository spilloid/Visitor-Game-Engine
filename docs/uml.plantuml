@startuml FinalProject
class Game{
    +void start()
}
class EasyGameEngine{
    -AbstractDrawingVisitor adv
    -AbstractCollisionVisitor acv
    -map<int,Scene> sceneList
    +void setBoundingBoxCollisions()
    +void setRayCastCollisions()
    +void setForces(bool)
    +void addScene(int,AbstractScene)
    +void setScene(int)
    +void setRendererer(AbstractRenderer)
}
class GameEngine {
    -list<Visitor> sceneVisitors
    -Scene scene
    +addVisitor(Visitor)
    +addSprite(SpriteProxy)
    +bool update()
}
class click{
    int x
    int y
    int isLeft
}
class AbstractInputWrapper {
    +int[] getKeyPress()
    +click getMousePress()
}
class SFMLInputWrapper {
}
class AbstractScene{
    +void addSprite()
    +void accept()
}
class SimpleScene{
    -list<SpriteProxy> spriteList

}
class LayeredScene{
    -lis<list<SpriteProxy>> spriteList

}
class TextureFactory{
        +bool loadTexture(string);
        +sf::Texture> getTexture(string);
}
class SpriteProxy{
    -int x
    -int y
    -int dy
    -int dx
    -int height
    -int WrapWidth
    -string textureLoc
    +getters()
    +setters()
}
class Visitor{
    +virtual void visit(SpriteProxy)
}
class BounceBoundsVisitor{
    void visit()
}
class WrapBoundsVisitor{
    void visit()
}
class AbstractCollisionVisitor{

}
class BoundingBoxCollisionVisitor{
}
class RayCastCollisionVisitor{

}
class CircularCollisionVisitor{

}
class AbstractRenderer{
    -bool open
    +void draw(vector<SpriteProxy> sp)
    +bool isOpen()
}
class SFMLRenderer{
    -RenderWindow rw
    -TextureFactory tf
    +getInput()
}
class AbstractDrawingVisitor{
    -AbstractRenderer renderer
    +void draw()
    +void visit()
    +bool isOpen()
}

class SimpleDrawingVisitor{
    -sf::RenderWindow window
    -map<SpriteProxy,sf::Sprite> text
    }
class GridDrawingVisitor{
    -int maxX
    -int maxY
}
class ForceVisitor{
    }
class GravityVisitor{
    }
Game <|-- Pong
Game <|-- Quoridor
Game ---> GameEngine
Game ---> Visitor
Game ---> SpriteProxy
Game ---> AbstractRenderer
GameEngine <|-- EasyGameEngine
GameEngine --> Visitor
GameEngine --> AbstractScene
GameEngine --> AbstractInputWrapper
AbstractInputWrapper <|--- SFMLInputWrapper
AbstractScene <|--- LayeredScene
AbstractScene <|--- SimpleScene
AbstractScene ---> SpriteProxy
Visitor ---> SpriteProxy
Visitor <|-- ForceVisitor
Visitor <|-- GravityVisitor
Visitor <|-- BounceBoundsVisitor
Visitor <|-- WrapBoundsVisitor
Visitor <|-- AbstractDrawingVisitor
Visitor<|-- AbstractDrawingVisitor
Visitor <|-- AbstractCollisionVisitor
AbstractCollisionVisitor <|-- RayCastCollisionVisitor
AbstractCollisionVisitor <|-- BoundingBoxCollisionVisitor
AbstractCollisionVisitor <|-- CircularCollisionVisitor
AbstractDrawingVisitor <|-- SimpleDrawingVisitor
AbstractDrawingVisitor <|-- GridDrawingVisitor
AbstractDrawingVisitor ---> AbstractRenderer
AbstractRenderer <|--- SFMLRenderer
SFMLRenderer ---> TextureFactory
@enduml