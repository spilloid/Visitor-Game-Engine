<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.16">
  <compounddef id="_s_f_m_l_input_wrapper_8cpp" kind="file" language="C++">
    <compoundname>SFMLInputWrapper.cpp</compoundname>
    <includes refid="_s_f_m_l_input_wrapper_8h" local="yes">SFMLInputWrapper.h</includes>
    <includes local="no">utility</includes>
    <incdepgraph>
      <node id="1">
        <label>classes/SFMLInputWrapper.cpp</label>
        <link refid="_s_f_m_l_input_wrapper_8cpp"/>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="8" relation="include">
        </childnode>
      </node>
      <node id="7">
        <label>SFML/Graphics.hpp</label>
      </node>
      <node id="3">
        <label>AbstractInputWrapper.h</label>
        <link refid="_abstract_input_wrapper_8h_source"/>
        <childnode refid="4" relation="include">
        </childnode>
        <childnode refid="5" relation="include">
        </childnode>
      </node>
      <node id="6">
        <label>SFML/Window.hpp</label>
      </node>
      <node id="5">
        <label>vector</label>
      </node>
      <node id="8">
        <label>utility</label>
      </node>
      <node id="2">
        <label>SFMLInputWrapper.h</label>
        <link refid="_s_f_m_l_input_wrapper_8h_source"/>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="6" relation="include">
        </childnode>
        <childnode refid="7" relation="include">
        </childnode>
      </node>
      <node id="4">
        <label>memory</label>
      </node>
    </incdepgraph>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="preprocessor">#include<sp/>&quot;SFMLInputWrapper.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2"><highlight class="normal"></highlight></codeline>
<codeline lineno="3"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;utility&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4"><highlight class="normal"></highlight></codeline>
<codeline lineno="5" refid="class_s_f_m_l_input_wrapper_1a2641351dc60c62da230d195c27eae25f" refkind="member"><highlight class="normal">std::vector&lt;int&gt;<sp/><ref refid="class_s_f_m_l_input_wrapper_1a2641351dc60c62da230d195c27eae25f" kindref="member">SFMLInputWrapper::getKeyPresses</ref>()<sp/>{</highlight></codeline>
<codeline lineno="6"><highlight class="normal"><sp/><sp/><sp/><sp/>std::vector&lt;int&gt;<sp/>list;</highlight></codeline>
<codeline lineno="7"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//50-151<sp/>care<sp/>about</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="8"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i<sp/>=<sp/>50;<sp/>i<sp/>&lt;<sp/>151;<sp/>i++)<sp/>{</highlight></codeline>
<codeline lineno="9"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(sf::Keyboard::isKeyPressed((sf::Keyboard::Key)<sp/>i))<sp/>{</highlight></codeline>
<codeline lineno="10"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>list.emplace_back(i);</highlight></codeline>
<codeline lineno="11"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="12"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="13"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>list;</highlight></codeline>
<codeline lineno="14"><highlight class="normal">}</highlight></codeline>
<codeline lineno="15" refid="class_s_f_m_l_input_wrapper_1aa836315c75ec30a561e769b2cb8b28bc" refkind="member"><highlight class="normal"><ref refid="structclick" kindref="compound">click</ref><sp/><ref refid="class_s_f_m_l_input_wrapper_1aa836315c75ec30a561e769b2cb8b28bc" kindref="member">SFMLInputWrapper::getLastClick</ref>()</highlight></codeline>
<codeline lineno="16"><highlight class="normal">{</highlight></codeline>
<codeline lineno="17"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//mouse<sp/>location</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="18"><highlight class="normal"><sp/><sp/><sp/><sp/>sf::Vector2i<sp/>localPosition<sp/>=<sp/>sf::Mouse::getPosition(*this-&gt;window);</highlight></codeline>
<codeline lineno="19"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//mouse<sp/>button</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="20"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>(<ref refid="structclick" kindref="compound">click</ref>){</highlight></codeline>
<codeline lineno="21"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>localPosition.x,</highlight></codeline>
<codeline lineno="22"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>localPosition.y,</highlight></codeline>
<codeline lineno="23"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>sf::Mouse::isButtonPressed(sf::Mouse::Left)</highlight></codeline>
<codeline lineno="24"><highlight class="normal"><sp/><sp/><sp/><sp/>};</highlight></codeline>
<codeline lineno="25"><highlight class="normal">}</highlight></codeline>
<codeline lineno="26"><highlight class="normal"></highlight></codeline>
<codeline lineno="27"><highlight class="normal">SFMLInputWrapper::SFMLInputWrapper(std::shared_ptr&lt;sf::RenderWindow&gt;<sp/>w)<sp/>:<sp/>window(std::move(w))</highlight></codeline>
<codeline lineno="28"><highlight class="normal">{}</highlight></codeline>
    </programlisting>
    <location file="classes/SFMLInputWrapper.cpp"/>
  </compounddef>
</doxygen>
