<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.16">
  <compounddef id="_sprite_proxy_8h" kind="file" language="C++">
    <compoundname>SpriteProxy.h</compoundname>
    <includes local="no">iostream</includes>
    <includes local="no">memory</includes>
    <includedby refid="_visitor_8h" local="yes">classes/Visitor.h</includedby>
    <includedby refid="_scene_8h" local="yes">classes/Scene.h</includedby>
    <includedby refid="_sprite_proxy_8cpp" local="yes">classes/SpriteProxy.cpp</includedby>
    <incdepgraph>
      <node id="2">
        <label>iostream</label>
      </node>
      <node id="1">
        <label>classes/SpriteProxy.h</label>
        <link refid="_sprite_proxy_8h"/>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="3" relation="include">
        </childnode>
      </node>
      <node id="3">
        <label>memory</label>
      </node>
    </incdepgraph>
    <invincdepgraph>
      <node id="8">
        <label>classes/GameEngine.h</label>
        <link refid="_game_engine_8h_source"/>
      </node>
      <node id="2">
        <label>classes/Visitor.h</label>
        <link refid="_visitor_8h_source"/>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="5" relation="include">
        </childnode>
        <childnode refid="6" relation="include">
        </childnode>
        <childnode refid="7" relation="include">
        </childnode>
        <childnode refid="8" relation="include">
        </childnode>
        <childnode refid="9" relation="include">
        </childnode>
        <childnode refid="10" relation="include">
        </childnode>
        <childnode refid="11" relation="include">
        </childnode>
        <childnode refid="12" relation="include">
        </childnode>
      </node>
      <node id="10">
        <label>classes/GravityVisitor.h</label>
        <link refid="_gravity_visitor_8h_source"/>
      </node>
      <node id="6">
        <label>classes/BoundingBoxCollisionVisitor.h</label>
        <link refid="_bounding_box_collision_visitor_8h_source"/>
      </node>
      <node id="3">
        <label>classes/AbstractDrawingVisitor.h</label>
        <link refid="_abstract_drawing_visitor_8h_source"/>
        <childnode refid="4" relation="include">
        </childnode>
      </node>
      <node id="12">
        <label>classes/WrapBoundsVisitor.h</label>
        <link refid="_wrap_bounds_visitor_8h_source"/>
      </node>
      <node id="7">
        <label>classes/ForceVisitor.h</label>
        <link refid="_force_visitor_8h_source"/>
      </node>
      <node id="11">
        <label>classes/RayCastCollisionVisitor.h</label>
        <link refid="_ray_cast_collision_visitor_8h_source"/>
      </node>
      <node id="4">
        <label>classes/SFMLDrawingVisitor.h</label>
        <link refid="_s_f_m_l_drawing_visitor_8h_source"/>
      </node>
      <node id="1">
        <label>classes/SpriteProxy.h</label>
        <link refid="_sprite_proxy_8h"/>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="9" relation="include">
        </childnode>
      </node>
      <node id="5">
        <label>classes/BounceBoundsVisitor.h</label>
        <link refid="_bounce_bounds_visitor_8h_source"/>
      </node>
      <node id="9">
        <label>classes/Scene.h</label>
        <link refid="_scene_8h_source"/>
        <childnode refid="8" relation="include">
        </childnode>
      </node>
    </invincdepgraph>
    <innerclass refid="class_sprite_proxy" prot="public">SpriteProxy</innerclass>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="preprocessor">#ifndef<sp/>SPRITEPROXY_H</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>SPRITEPROXY_H</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;iostream&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;memory&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5" refid="class_sprite_proxy" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="class_sprite_proxy" kindref="compound">SpriteProxy</ref><sp/>{</highlight></codeline>
<codeline lineno="6"><highlight class="normal"></highlight><highlight class="keyword">protected</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="7"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>x;</highlight></codeline>
<codeline lineno="8"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>dx;</highlight></codeline>
<codeline lineno="9"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>y;</highlight></codeline>
<codeline lineno="10"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>dy;</highlight></codeline>
<codeline lineno="11"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>height;</highlight></codeline>
<codeline lineno="12"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>width;</highlight></codeline>
<codeline lineno="13"><highlight class="normal"><sp/><sp/>std::string<sp/>textureLoc;</highlight></codeline>
<codeline lineno="14"><highlight class="normal"></highlight><highlight class="keyword">public</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="19"><highlight class="normal"><sp/><sp/><ref refid="class_sprite_proxy_1ac583daf0e2a7ce3f1cb2cfe2ec96f115" kindref="member">SpriteProxy</ref>();</highlight></codeline>
<codeline lineno="28"><highlight class="normal"><sp/><sp/><ref refid="class_sprite_proxy_1ac583daf0e2a7ce3f1cb2cfe2ec96f115" kindref="member">SpriteProxy</ref>(std::string<sp/>textureLoc,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>x,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>y,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>width,</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>height);</highlight></codeline>
<codeline lineno="34"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="class_sprite_proxy_1a0e84a7235e9fa53b54c7ae15c567b44d" kindref="member">getX</ref>();</highlight></codeline>
<codeline lineno="40"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="class_sprite_proxy_1ad85cedf675d5f27f37095e2e74577dfe" kindref="member">getY</ref>();</highlight></codeline>
<codeline lineno="47"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_sprite_proxy_1ac78ce8e42f131eac83a5116a9531c2e8" kindref="member">setXY</ref>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>X,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>Y);</highlight></codeline>
<codeline lineno="48"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>getDX();</highlight></codeline>
<codeline lineno="49"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>getDY();</highlight></codeline>
<codeline lineno="50"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>setDXY(</highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>x,<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>y);</highlight></codeline>
<codeline lineno="51"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>getHeight();</highlight></codeline>
<codeline lineno="52"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>getWidth();</highlight></codeline>
<codeline lineno="53"><highlight class="normal"><sp/><sp/>std::string<sp/>getTextureLocation();</highlight></codeline>
<codeline lineno="54"><highlight class="normal">};</highlight></codeline>
<codeline lineno="55"><highlight class="normal"></highlight></codeline>
<codeline lineno="56"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight></codeline>
    </programlisting>
    <location file="classes/SpriteProxy.h"/>
  </compounddef>
</doxygen>
