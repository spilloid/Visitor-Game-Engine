<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.16">
  <compounddef id="_scene_8cpp" kind="file" language="C++">
    <compoundname>Scene.cpp</compoundname>
    <includes refid="_scene_8h" local="yes">Scene.h</includes>
    <incdepgraph>
      <node id="7">
        <label>list</label>
      </node>
      <node id="1">
        <label>classes/Scene.cpp</label>
        <link refid="_scene_8cpp"/>
        <childnode refid="2" relation="include">
        </childnode>
      </node>
      <node id="6">
        <label>Visitor.h</label>
        <link refid="_visitor_8h_source"/>
        <childnode refid="4" relation="include">
        </childnode>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="5" relation="include">
        </childnode>
      </node>
      <node id="4">
        <label>iostream</label>
      </node>
      <node id="3">
        <label>SpriteProxy.h</label>
        <link refid="_sprite_proxy_8h_source"/>
        <childnode refid="4" relation="include">
        </childnode>
        <childnode refid="5" relation="include">
        </childnode>
      </node>
      <node id="2">
        <label>Scene.h</label>
        <link refid="_scene_8h_source"/>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="6" relation="include">
        </childnode>
        <childnode refid="7" relation="include">
        </childnode>
        <childnode refid="5" relation="include">
        </childnode>
      </node>
      <node id="5">
        <label>memory</label>
      </node>
    </incdepgraph>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="preprocessor">#include<sp/>&quot;Scene.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2"><highlight class="normal">Scene::Scene(){</highlight></codeline>
<codeline lineno="3"><highlight class="normal">}</highlight></codeline>
<codeline lineno="4"><highlight class="normal">Scene::~Scene(){</highlight></codeline>
<codeline lineno="5"><highlight class="normal">}</highlight></codeline>
<codeline lineno="6"><highlight class="normal"></highlight></codeline>
<codeline lineno="7"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>Scene::accept(std::shared_ptr&lt;Visitor&gt;<sp/>v){</highlight></codeline>
<codeline lineno="8"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(std::_List_iterator&lt;std::shared_ptr&lt;SpriteProxy&gt;&gt;<sp/>i<sp/>=<sp/>this-&gt;spriteList.begin();<sp/>i<sp/>!=<sp/>this-&gt;spriteList.end();<sp/>i++){</highlight></codeline>
<codeline lineno="9"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>v-&gt;visit(*i);</highlight></codeline>
<codeline lineno="10"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="11"><highlight class="normal">}</highlight></codeline>
<codeline lineno="12"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>Scene::addSprite(std::shared_ptr&lt;SpriteProxy&gt;<sp/>s){</highlight></codeline>
<codeline lineno="13"><highlight class="normal"><sp/><sp/><sp/><sp/>this-&gt;spriteList.push_back(s);</highlight></codeline>
<codeline lineno="14"><highlight class="normal">}</highlight></codeline>
    </programlisting>
    <location file="classes/Scene.cpp"/>
  </compounddef>
</doxygen>
